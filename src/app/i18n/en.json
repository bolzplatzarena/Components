{
  "content": {
    "text": {
      "1": "This is a collection of components build on top of angular material to make it easier to use it. Additionally little helpers could be found.",
      "examples": "Collection of conmponents and utilities based on the angular material library.",
      "table": "Easy way to use a table, without the need to implement the headers and columns by your own.",
      "column": "Custom column configuration available for:",
      "options": "sortable (default: true) - set to false to disable sorting",
      "enum": "Sometimes it is hard to handle enums, but it is important to use an enum instead of just using a number or a string.\n    <br>Here you can find some little helpers, which enable you to use enum for material select or in the tempalte as a\n    string very easily.",
      "enum_options": "Easy way to use a typescript enum as source of the material select.",
      "pipe": "The pipe provides an easy way to get the selected key of an enumeration in the template.",
      "dialogs": "This library provides a way to use dialogs in your application."
    },
    "headline": {
      "first": "Bolzplatzarena Components",
      "examples": "Examples",
      "table": "The table",
      "options": "Options",
      "enum": "Enum Helper",
      "enum_options": "Select Options with enumeration",
      "select": "Select options with enumeration",
      "pipe": "Pipe",
      "static_data": "Using of static data",
      "observables": "Using of observables",
      "dialogs": "Usage of dialogs"
    }
  },
  "bpa": {
    "global": {
      "no": "Cancel",
      "okay": "Okay"
    },
    "components": {
      "table": {
        "items-per-page": "Items per page",
        "page": "Page {{ page }} of {{ amountPages }}",
        "next-page": "Next page",
        "last-page": "Previous page",
        "first-page": "First page",
        "previous-page": "Last page"
      }
    }
  },
  "hero": {
    "components": {
      "hero-list": {
        "name": "Name",
        "level": "Level",
        "type": "Type",
        "type.hammer": "Hammer",
        "type.fighter": "Fighter",
        "type.spy": "Spy",
        "type.scientist": "Scientist",
        "health": "Health",
        "birthday": "Birthday",
        "actions": "Actions",
        "action": {
          "edit": "More Details",
          "delete": "Kill"
        }
      }
    },
    "types": {
      "fighter": "Fighter",
      "hammer": "Thor",
      "scientist": "Scientist",
      "spy": "Spy"
    }
  },
  "dialog": {
    "confirm_delete": {
      "title": "Confirm delete",
      "content": "Do you really want to delete this item?"
    },
    "simple_dialog": {
      "title": "Simple Dialog",
      "content": "This is a simple dialog without any special features in it. But it brings already the possibility to use esc key to close the dialog."
    },
    "confirmation": {
      "title": "Confirmation Dialog",
      "content": "The service provides several function to handle confirmation. Either you handle the result of the confirmation screen by you own or you give already the function which needs to be called (or not) if the okay button is clicked."
    },
    "layout": {
      "title": "Use layout",
      "content": "Wll, all the dialogs should look like the others. So you can use a simple component which provides the layout with headline, okay and cancel button."
    }
  }
}
